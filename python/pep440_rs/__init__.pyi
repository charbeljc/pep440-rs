# Generated by `stubgen -p pep440_rs`
from typing import Any, ClassVar

class Operator:
    Equal: ClassVar[Operator] = ...
    EqualStar: ClassVar[Operator] = ...
    ExactEqual: ClassVar[Operator] = ...
    GreaterThan: ClassVar[Operator] = ...
    GreaterThanEqual: ClassVar[Operator] = ...
    LessThan: ClassVar[Operator] = ...
    LessThanEqual: ClassVar[Operator] = ...
    NotEqual: ClassVar[Operator] = ...
    NotEqualStar: ClassVar[Operator] = ...
    TildeEqual: ClassVar[Operator] = ...
    __hash__: ClassVar[None] = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    def __eq__(self, other) -> bool: ...
    def __ge__(self, other) -> bool: ...
    def __gt__(self, other) -> bool: ...
    def __int__(self) -> int: ...
    def __le__(self, other) -> bool: ...
    def __lt__(self, other) -> bool: ...
    def __ne__(self, other) -> bool: ...

class PreRelease:
    Alpha: ClassVar[PreRelease] = ...
    Beta: ClassVar[PreRelease] = ...
    Rc: ClassVar[PreRelease] = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    def __eq__(self, other) -> bool: ...
    def __ge__(self, other) -> bool: ...
    def __gt__(self, other) -> bool: ...
    def __hash__(self) -> int: ...
    def __int__(self) -> int: ...
    def __le__(self, other) -> bool: ...
    def __lt__(self, other) -> bool: ...
    def __ne__(self, other) -> bool: ...

class Version:
    dev: Any
    epoch: Any
    major: Any
    micro: Any
    minor: Any
    post: Any
    pre: Any
    release: Any
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    def any_prerelease(self, *args, **kwargs) -> Any: ...
    @classmethod
    def parse(cls, *args, **kwargs) -> Any: ...
    @classmethod
    def parse_star(cls, *args, **kwargs) -> Any: ...
    def __eq__(self, other) -> bool: ...
    def __ge__(self, other) -> bool: ...
    def __gt__(self, other) -> bool: ...
    def __hash__(self) -> int: ...
    def __le__(self, other) -> bool: ...
    def __lt__(self, other) -> bool: ...
    def __ne__(self, other) -> bool: ...

class VersionSpecifier:
    operator: Any
    version: Any
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    def contains(self, *args, **kwargs) -> Any: ...
    def __contains__(self, other) -> bool: ...
    def __eq__(self, other) -> bool: ...
    def __ge__(self, other) -> bool: ...
    def __gt__(self, other) -> bool: ...
    def __hash__(self) -> int: ...
    def __le__(self, other) -> bool: ...
    def __lt__(self, other) -> bool: ...
    def __ne__(self, other) -> bool: ...

class VersionSpecifiers:
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    def __getitem__(self, index) -> Any: ...
    def __iter__(self) -> Any: ...
    def __len__(self) -> int: ...
